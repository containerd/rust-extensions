[package]
name = "containerd-runc-shim"
version = "0.1.1"
authors = [
    "Shaobao Feng <fshb1988@gmail.com>",
    "Tianyang Zhang <burning9699@gmail.com>",
    "The containerd Authors",
]
description = "Rust implementation of containerd's runc v2 shim runtime"
keywords = ["containerd", "shim", "containers"]
categories = ["api-bindings", "asynchronous"]

edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true

[[bin]]
# Overwrite the binary name so it can be referred as "io.containerd.runc.v2-rs" from containerd.
# Note: the runtime's binary name must start with "io.containerd.runc" in order to
# keep compatibility with Go runc runtime and the containerd client.
# Example: https://github.com/containerd/containerd/blob/8047eb2fcac1f4553ee7652862194b1e10855ce7/task_opts_unix.go#L33
name = "containerd-shim-runc-v2-rs"
path = "src/main.rs"
doc = false

[dependencies]
containerd-shim = { path = "../shim", version = "0.7.1", features = ["async"] }
crossbeam.workspace = true
libc.workspace = true
log.workspace = true
nix = { workspace = true, features = ["socket", "uio", "term"] }
oci-spec.workspace = true
prctl.workspace = true
runc = { path = "../runc", version = "0.2.0", features = ["async"] }
serde.workspace = true
serde_json.workspace = true
time.workspace = true
uuid.workspace = true

# Async dependencies
async-trait.workspace = true
futures.workspace = true
tokio = { workspace = true, features = ["full"] }

[target.'cfg(target_os = "linux")'.dependencies]
cgroups-rs.workspace = true
nix = { workspace = true, features = ["event"] }
