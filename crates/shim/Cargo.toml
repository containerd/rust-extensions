[package]
name = "containerd-shim"
version = "0.5.0"
authors = [
  "Maksym Pavlenko <pavlenko.maksym@gmail.com>",
  "The containerd Authors",
]
description = "containerd shim extension"
keywords = ["containerd", "shim", "containers"]
categories = ["api-bindings", "asynchronous"]

edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true

[features]
async = [
  "async-trait",
  "containerd-shim-protos/async",
  "futures",
  "signal-hook-tokio",
  "tokio",
]
docs = []

[[example]]
name = "skeleton_async"
required-features = ["async"]

[[example]]
name = "windows-log-reader"
path = "examples/windows_log_reader.rs"

[dependencies]
containerd-shim-protos = { path = "../shim-protos", version = "0.5.0" }
go-flag = "0.1.0"
lazy_static = "1.4.0"
libc.workspace = true
log = { workspace = true, features = ["std", "kv_unstable" ] }
nix = { workspace = true, features = [
  "ioctl",
  "fs",
  "socket",
  "signal",
  "mount",
] }
oci-spec.workspace = true
page_size = "0.6.0"
prctl = "1.0.0"
signal-hook = "0.3.13"
serde.workspace = true
serde_json.workspace = true
thiserror.workspace = true
time.workspace = true

# Async dependencies
async-trait = { workspace = true, optional = true }
futures = { workspace = true, optional = true }
signal-hook-tokio = { version = "0.3.1", optional = true, features = [
  "futures-v0_3",
] }
tokio = { workspace = true, features = ["full"], optional = true }

[target.'cfg(target_os = "linux")'.dependencies]
cgroups-rs = "0.3.3"

[target.'cfg(unix)'.dependencies]
command-fds = "0.2.1"

[target.'cfg(windows)'.dependencies]
mio = { version = "0.8", features = ["os-ext", "os-poll"] }
os_pipe.workspace = true
windows-sys = { version = "0.48.0", features = [
  "Win32_Foundation",
  "Win32_System_WindowsProgramming",
  "Win32_System_Console",
  "Win32_System_Pipes",
  "Win32_Security",
  "Win32_Storage_FileSystem",
  "Win32_System_Threading",
] }

[dev-dependencies]
tempfile = "3.6"

[package.metadata.docs.rs]
features = ["docs"]
